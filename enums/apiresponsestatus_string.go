// Code generated by "enumer -type=APIResponseStatus -json enums"; DO NOT EDIT

package enums

import (
	"encoding/json"
	"fmt"
)

const _APIResponseStatus_name = "SuccessError"

var _APIResponseStatus_index = [...]uint8{0, 7, 12}

func (i APIResponseStatus) String() string {
	if i < 0 || i >= APIResponseStatus(len(_APIResponseStatus_index)-1) {
		return fmt.Sprintf("APIResponseStatus(%d)", i)
	}
	return _APIResponseStatus_name[_APIResponseStatus_index[i]:_APIResponseStatus_index[i+1]]
}

var _APIResponseStatusNameToValue_map = map[string]APIResponseStatus{
	_APIResponseStatus_name[0:7]:  0,
	_APIResponseStatus_name[7:12]: 1,
}

func APIResponseStatusString(s string) (APIResponseStatus, error) {
	if val, ok := _APIResponseStatusNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to APIResponseStatus values", s)
}

func (i APIResponseStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *APIResponseStatus) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("APIResponseStatus should be a string, got %s", data)
	}

	var err error
	*i, err = APIResponseStatusString(s)
	return err
}
